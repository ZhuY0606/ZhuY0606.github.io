(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{190:function(e,n,s){"use strict";s.r(n);var a=s(0),r=Object(a.a)({},function(){var e=this,n=e.$createElement,s=e._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("[TOC]")]),e._v(" "),s("h1",{attrs:{id:"配置构建变体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置构建变体","aria-hidden":"true"}},[e._v("#")]),e._v(" 配置构建变体")]),e._v(" "),s("p",[e._v("此页面以"),s("a",{attrs:{href:"https://developer.android.google.cn/studio/build/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("配置构建概览"),s("OutboundLink")],1),e._v("为基础，向您介绍如何配置构建变体，以便从同一个项目中创建应用的不同版本，以及如何正确地管理依赖项并签署配置。")]),e._v(" "),s("p",[e._v("每个"),s("em",[e._v("构建变体")]),e._v("都代表您可以为应用构建的一个不同版本。例如，您可能希望构建应用的免费版本（只提供有限的内容）和付费版本（提供更多内容）。您还可以针对不同的设备、根据 API 级别或其他设备变体构建应用的不同版本。然而，如果您希望根据设备 ABI 或屏幕密度构建不同的版本，则请改用 "),s("a",{attrs:{href:"https://developer.android.google.cn/studio/build/configure-apk-splits.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("APK 拆分"),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("p",[e._v("构建变体是 Gradle 按照"),s("a",{attrs:{href:"https://developer.android.google.cn/studio/build/build-variants#sourceset-build",target:"_blank",rel:"noopener noreferrer"}},[e._v("特定规则集"),s("OutboundLink")],1),e._v("合并在构建类型和产品风味中配置的设置、代码和资源所生成的结果。您并不直接配置构建变体，而是配置组成变体的构建类型和产品风味。")]),e._v(" "),s("p",[e._v("例如，一个“演示”"),s("em",[e._v("产品风味")]),e._v("可以指定不同的功能和设备要求，例如自定义源代码、资源和最低 API 级别，而“调试”"),s("em",[e._v("构建类型")]),e._v("则应用不同的构建和打包设置，例如调试选项和签署密钥。最终生成的构建变体是应用的“演示调试”版本，其既包含“演示”产品风味中包含的各种配置和资源，又包含“调试”构建类型和 "),s("code",[e._v("main/")]),e._v(" 源集。")]),e._v(" "),s("h2",{attrs:{id:"配置构建类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置构建类型","aria-hidden":"true"}},[e._v("#")]),e._v(" 配置构建类型")]),e._v(" "),s("p",[e._v("您可以在模块级 "),s("code",[e._v("build.gradle")]),e._v(" 文件的 "),s("code",[e._v("android {}")]),e._v(" 代码块内部创建和配置构建类型。当您创建新模块时，Android Studio 会自动为您创建调试和发布这两种构建类型。尽管调试构建类型不会出现在构建配置文件中，Android Studio 会为其配置 "),s("a",{attrs:{href:"http://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.BuildType.html#com.android.build.gradle.internal.dsl.BuildType:debuggable",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("debuggable true")]),s("OutboundLink")],1),e._v("。这样，您可以在安全的 Android 设备上调试应用并使用通用调试密钥库配置 APK 签署。")]),e._v(" "),s("p",[e._v("如果您希望添加或更改特定设置，您可以将调试构建类型添加到您的配置中。以下示例为调试构建类型指定了 "),s("a",{attrs:{href:"http://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.BuildType.html#com.android.build.gradle.internal.dsl.BuildType:applicationIdSuffix",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("applicationIdSuffix")]),s("OutboundLink")],1),e._v("，并配置了一个使用调试构建类型中的设置进行初始化的“jnidebug”构建类型。")]),e._v(" "),s("div",{staticClass:"language-groovy line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-groovy"}},[s("code",[e._v("android "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("...")]),e._v("\n    defaultConfig "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    buildTypes "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        release "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n            minifyEnabled "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n            proguardFiles "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("getDefaultProguardFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'proguard-android.txt'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'proguard-rules.pro'")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n        debug "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n            applicationIdSuffix "),s("span",{pre:!0,attrs:{class:"token string gstring"}},[e._v('".debug"')]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/**\n         * The 'initWith' property allows you to copy configurations from other build types,\n         * so you don't have to configure one from the beginning. You can then configure\n         * just the settings you want to change. The following line initializes\n         * 'jnidebug' using the debug build type, and changes only the\n         * applicationIdSuffix and versionNameSuffix settings.\n         */")]),e._v("\n\n        jnidebug "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// This copies the debuggable attribute and debug signing configurations.")]),e._v("\n            initWith debug\n\n            applicationIdSuffix "),s("span",{pre:!0,attrs:{class:"token string gstring"}},[e._v('".jnidebug"')]),e._v("\n            jniDebuggable "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br")])]),s("p",[s("strong",[e._v("注")]),e._v("：当您对构建配置文件进行更改时，Android Studio 会要求您为项目同步新配置。要同步项目，您可以点击在做出更改后立即出现在通知栏中的 "),s("strong",[e._v("Sync Now")]),e._v("，也可以点击工具栏中的 "),s("strong",[e._v("Sync Project")]),e._v(" "),s("img",{attrs:{src:"https://developer.android.google.cn/studio/images/buttons/toolbar-sync-gradle.png",alt:"img"}}),e._v(" 。如果 Android Studio 通知配置出现错误，会显示 "),s("strong",[e._v("Messages")]),e._v(" 窗口，具体描述该问题。")]),e._v(" "),s("p",[e._v("如需详细了解对于构建类型可以配置的所有属性，请阅读"),s("a",{attrs:{href:"http://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.BuildType.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("构建类型 DSL 参考"),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("h2",{attrs:{id:"配置产品风味"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置产品风味","aria-hidden":"true"}},[e._v("#")]),e._v(" 配置产品风味")]),e._v(" "),s("p",[e._v("创建产品风味与创建构建类型类似：只需将它们添加到 "),s("code",[e._v("productFlavors {}")]),e._v(" 代码块并配置您想要的设置。产品风味支持与 "),s("code",[e._v("defaultConfig")]),e._v(" 相同的属性，这是因为 "),s("code",[e._v("defaultConfig")]),e._v(" 实际上属于 "),s("a",{attrs:{href:"http://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.ProductFlavor.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("ProductFlavor")]),s("OutboundLink")],1),e._v(" 类。这意味着，您可以在 "),s("code",[e._v("defaultConfig {}")]),e._v(" 代码块中提供所有风味的基本配置，每种风味均可更改任何这些默认值，例如 "),s("a",{attrs:{href:"http://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.ProductFlavor.html#com.android.build.gradle.internal.dsl.ProductFlavor:applicationId",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("applicationId")]),s("OutboundLink")],1),e._v("。要详细了解应用 ID，请阅读"),s("a",{attrs:{href:"https://developer.android.google.cn/studio/build/application-id.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("设置应用 ID"),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("p",[s("strong",[e._v("注")]),e._v("：您仍需在 "),s("code",[e._v("main/")]),e._v(" 清单文件中使用 "),s("a",{attrs:{href:"https://developer.android.google.cn/guide/topics/manifest/manifest-element.html#package",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("package")]),s("OutboundLink")],1),e._v(" 属性指定程序包名称。您还必须在源代码中使用此程序包名称引用 R 类或者解析任何相关的 Activity 或服务注册。这样，您可以使用 "),s("code",[e._v("applicationId")]),e._v(" 为每个产品风味分配一个唯一的 ID，以用于打包和分发，而不必更改您的源代码。")]),e._v(" "),s("p",[e._v("以下代码示例创建了一个“演示”和“完整”产品风味，以赋予其自己的 "),s("a",{attrs:{href:"http://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.ProductFlavor.html#com.android.build.gradle.internal.dsl.ProductFlavor:applicationIdSuffix",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("applicationIdSuffix")]),s("OutboundLink")],1),e._v(" 和 "),s("a",{attrs:{href:"http://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.ProductFlavor.html#com.android.build.gradle.internal.dsl.ProductFlavor:versionNameSuffix",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("versionNameSuffix")]),s("OutboundLink")],1),e._v("：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('android {\n    ...\n    defaultConfig {...}\n    buildTypes {...}\n    productFlavors {\n        demo {\n            applicationIdSuffix ".demo"\n            versionNameSuffix "-demo"\n        }\n        full {\n            applicationIdSuffix ".full"\n            versionNameSuffix "-full"\n        }\n    }\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br")])]),s("p",[s("strong",[e._v("注")]),e._v("：要利用 Google Play 中的"),s("a",{attrs:{href:"https://developer.android.google.cn/google/play/publishing/multiple-apks.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("多 APK 支持"),s("OutboundLink")],1),e._v("分发您的应用，请为所有变体分配相同的 "),s("code",[e._v("applicationId")]),e._v(" 值并为每个变体分配一个不同的 "),s("a",{attrs:{href:"http://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.ProductFlavor.html#com.android.build.gradle.internal.dsl.ProductFlavor:versionCode",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("versionCode")]),s("OutboundLink")],1),e._v("。要在 Google Play 中以独立应用的形式分发应用的不同变体，您需要为每个变体分配一个不同的 "),s("code",[e._v("applicationId")]),e._v("。")]),e._v(" "),s("p",[e._v("在创建和配置您的产品风味之后，在通知栏中点击 "),s("strong",[e._v("Sync Now")]),e._v("。在同步完成后，Gradle 会根据您的构建类型和产品风味自动创建构建变体，并按照 "),s("code",[e._v("<product-flavor><Build-Type>")]),e._v(" 的格式命名这些变体。例如，如果您创建了“演示”和“完整”这两种产品风味并保留默认的“调试”和“发布”构建类型，Gradle 将创建以下构建变体：")]),e._v(" "),s("ul",[s("li",[s("em",[e._v("演示调试")])]),e._v(" "),s("li",[s("em",[e._v("演示发布")])]),e._v(" "),s("li",[s("em",[e._v("完整调试")])]),e._v(" "),s("li",[s("em",[e._v("完整发布")])])]),e._v(" "),s("p",[e._v("您可以将构建变体更改为您要构建并运行的任何变体，只需转到 "),s("strong",[e._v("Build")]),e._v(" > "),s("strong",[e._v("Select Build Variant")]),e._v("，然后从下拉菜单中选择一个变体。然而，要开始自定义每个构建变体及其功能和资源，您需要了解如何创建和管理源集。")]),e._v(" "),s("h3",{attrs:{id:"组合多个产品风味"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组合多个产品风味","aria-hidden":"true"}},[e._v("#")]),e._v(" 组合多个产品风味")]),e._v(" "),s("p",[e._v("某些情况下，您可能希望组合多个产品风味中的配置。例如，您可能希望基于 API 级别为“完整”和“演示”产品风味创建不同的配置。为此，您可以通过适用于 Gradle 的 Android 插件创建产品风味组，称为风味维度。构建您的应用时，Gradle 会将您定义的每个风味维度中的产品风味配置与构建类型配置组合来创建最终构建变体。Gradle 不会组合属于相同风味维度的产品风味。")]),e._v(" "),s("p",[s("strong",[e._v("提示")]),e._v("：要根据 ABI 和屏幕密度创建不同版本的应用，您应"),s("a",{attrs:{href:"https://developer.android.google.cn/studio/build/configure-apk-splits.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("配置 APK 拆分"),s("OutboundLink")],1),e._v("，而不是使用产品风味。")]),e._v(" "),s("p",[e._v("下面的代码示例使用 "),s("a",{attrs:{href:"http://google.github.io/android-gradle-dsl/current/com.android.build.gradle.AppExtension.html#com.android.build.gradle.AppExtension:flavorDimensions(java.lang.String%5B%5D)",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("flavorDimensions")]),s("OutboundLink")],1),e._v(" 属性创建一个“模式”风味维度以组织“完整”和“演示”产品风味，以及一个“api”风味维度以基于 API 级别组织产品风味配置：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('android {\n  ...\n  buildTypes {\n    debug {...}\n    release {...}\n  }\n\n  // Specifies the flavor dimensions you want to use. The order in which you\n  // list each dimension determines its priority, from highest to lowest,\n  // when Gradle merges variant sources and configurations. You must assign\n  // each product flavor you configure to one of the flavor dimensions.\n  flavorDimensions "api", "mode"\n\n  productFlavors {\n    demo {\n      // Assigns this product flavor to the "mode" flavor dimension.\n      dimension "mode"\n      ...\n    }\n\n    full {\n      dimension "mode"\n      ...\n    }\n\n    // Configurations in the "api" product flavors override those in "mode"\n    // flavors and the defaultConfig {} block. Gradle determines the priority\n    // between flavor dimensions based on the order in which they appear next\n    // to the flavorDimensions property above--the first dimension has a higher\n    // priority than the second, and so on.\n    minApi24 {\n      dimension "api"\n      minSdkVersion \'24\'\n      // To ensure the target device receives the version of the app with\n      // the highest compatible API level, assign version codes in increasing\n      // value with API level. To learn more about assigning version codes to\n      // support app updates and uploading to Google Play, read Multiple APK Support\n      versionCode 30000 + android.defaultConfig.versionCode\n      versionNameSuffix "-minApi24"\n      ...\n    }\n\n    minApi23 {\n      dimension "api"\n      minSdkVersion \'23\'\n      versionCode 20000  + android.defaultConfig.versionCode\n      versionNameSuffix "-minApi23"\n      ...\n    }\n\n    minApi21 {\n      dimension "api"\n      minSdkVersion \'21\'\n      versionCode 10000  + android.defaultConfig.versionCode\n      versionNameSuffix "-minApi21"\n      ...\n    }\n  }\n}\n...\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br"),s("span",{staticClass:"line-number"},[e._v("44")]),s("br"),s("span",{staticClass:"line-number"},[e._v("45")]),s("br"),s("span",{staticClass:"line-number"},[e._v("46")]),s("br"),s("span",{staticClass:"line-number"},[e._v("47")]),s("br"),s("span",{staticClass:"line-number"},[e._v("48")]),s("br"),s("span",{staticClass:"line-number"},[e._v("49")]),s("br"),s("span",{staticClass:"line-number"},[e._v("50")]),s("br"),s("span",{staticClass:"line-number"},[e._v("51")]),s("br"),s("span",{staticClass:"line-number"},[e._v("52")]),s("br"),s("span",{staticClass:"line-number"},[e._v("53")]),s("br"),s("span",{staticClass:"line-number"},[e._v("54")]),s("br"),s("span",{staticClass:"line-number"},[e._v("55")]),s("br"),s("span",{staticClass:"line-number"},[e._v("56")]),s("br"),s("span",{staticClass:"line-number"},[e._v("57")]),s("br"),s("span",{staticClass:"line-number"},[e._v("58")]),s("br"),s("span",{staticClass:"line-number"},[e._v("59")]),s("br"),s("span",{staticClass:"line-number"},[e._v("60")]),s("br")])]),s("p",[e._v("Gradle 创建的构建变体数量等于每个风味维度中的风味数量与您配置的构建类型数量的乘积。在 Gradle 为每个构建变体或对应 APK 命名时，属于较高优先级风味维度的产品风味首先显示，之后是较低优先级维度的产品风味，再之后是构建类型。以上面的构建配置为例，Gradle 可以使用以下命名方案创建总共 12 个构建变体：")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("例如，")]),e._v(" "),s("p",[e._v("构建变体："),s("code",[e._v("minApi24DemoDebug")])]),e._v(" "),s("p",[e._v("对应 APK："),s("code",[e._v("app-minApi24-demo-debug.apk")])])])]),e._v(" "),s("p",[e._v("除了可以为各个产品风味和构建变体创建源集目录外，您也可以为每个产品风味"),s("em",[e._v("组合")]),e._v("创建源集目录。例如，您可以创建 Java 源并将其添加到 "),s("code",[e._v("src/demoMinApi24/java/")]),e._v(" 目录中，Gradle 仅会在构建组合了这两种产品风味的变体时使用这些源。与属于各个产品风味的源集相比，您为产品风味组合创建的源集拥有更高的优先级。要详细了解源集和 Gradle 如何合并源，请阅读有关如何"),s("a",{attrs:{href:"https://developer.android.google.cn/studio/build/build-variants#sourcesets",target:"_blank",rel:"noopener noreferrer"}},[e._v("创建源集"),s("OutboundLink")],1),e._v("的部分。")]),e._v(" "),s("h3",{attrs:{id:"过滤变体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#过滤变体","aria-hidden":"true"}},[e._v("#")]),e._v(" 过滤变体")]),e._v(" "),s("p",[e._v("Gradle 会为您配置的产品风味与构建类型的每个可能的组合创建构建变体。不过，某些特定的构建变体在您的项目环境中并不必要，也可能没有意义。您可以在模块级 "),s("code",[e._v("build.gradle")]),e._v(" 文件中创建一个变体过滤器，以移除某些构建变体配置。")]),e._v(" "),s("p",[e._v("以上一部分中的构建配置为例，假设您计划为演示版本的应用仅支持 API 级别 23 和更高级别。您可以使用 "),s("a",{attrs:{href:"http://google.github.io/android-gradle-dsl/current/com.android.build.api.variant.VariantFilter.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("variantFilter {}")]),s("OutboundLink")],1),e._v(" 代码块过滤出组合了“minApi21”和“演示”产品风味的所有构建变体配置：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('android {\n  ...\n  buildTypes {...}\n\n  flavorDimensions "api", "mode"\n  productFlavors {\n    demo {...}\n    full {...}\n    minApi24 {...}\n    minApi23 {...}\n    minApi21 {...}\n  }\n\n  variantFilter { variant ->\n      def names = variant.flavors*.name\n      // To check for a certain build type, use variant.buildType.name == "<buildType>"\n      if (names.contains("minApi21") && names.contains("demo")) {\n          // Gradle ignores any variants that satisfy the conditions above.\n          setIgnore(true)\n      }\n  }\n}\n...\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br")])]),s("p",[e._v("在您向构建配置添加变体过滤器并点击通知栏中的 "),s("strong",[e._v("Sync Now")]),e._v(" 后，Gradle 将忽略满足您指定的条件的任何构建变体，在您点击菜单栏中的 "),s("strong",[e._v("Build > Select Build Variant")]),e._v("（或工具窗口栏中的 "),s("strong",[e._v("Build Variants")]),e._v("）时，这些构建变体将不会再 "),s("img",{attrs:{src:"https://developer.android.google.cn/studio/images/buttons/window-monitor.png",alt:"img"}}),e._v(" 显示在下拉菜单中。")]),e._v(" "),s("h2",{attrs:{id:"创建源集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建源集","aria-hidden":"true"}},[e._v("#")]),e._v(" 创建源集")]),e._v(" "),s("p",[e._v("默认情况下，Android Studio 会创建 "),s("code",[e._v("main/")]),s("a",{attrs:{href:"https://developer.android.google.cn/studio/build/index.html#sourcesets",target:"_blank",rel:"noopener noreferrer"}},[e._v(" 源集"),s("OutboundLink")],1),e._v("和目录，用于存储您要在所有构建变体之间共享的一切资源。然而，您可以创建新的源集来控制 Gradle 要为特定的构建类型、产品风味（以及使用"),s("a",{attrs:{href:"https://developer.android.google.cn/studio/build/build-variants.html#flavor-dimensions",target:"_blank",rel:"noopener noreferrer"}},[e._v("风味维度"),s("OutboundLink")],1),e._v("时的产品风味组合）和构建变体编译和打包的确切文件。例如，您可以在 "),s("code",[e._v("main/")]),e._v(" 源集中定义基本的功能，使用产品风味源集针对不同的客户更改应用的品牌，或者仅针对使用调试构建类型的构建变体包含特殊的权限和日志记录功能。")]),e._v(" "),s("p",[e._v("Gradle 要求您按照与 "),s("code",[e._v("main/")]),e._v(" 源集类似的特定方式组织源集文件和目录。例如，Gradle 要求您的“调试”构建类型所特定的 Java 类文件位于 "),s("code",[e._v("src/debug/java/")]),e._v(" 目录中。")]),e._v(" "),s("p",[e._v("适用于 Gradle 的 Android 插件提供了一项有用的 Gradle 任务，可向您展示如何针对每种构建类型、产品风味和构建变体组织您的文件。例如，报告的以下部分描述了 Gradle 要求在何处能找到“调试”构建类型的特定文件：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("------------------------------------------------------------\nProject :app\n------------------------------------------------------------\n\n...\n\ndebug\n----\nCompile configuration: compile\nbuild.gradle name: android.sourceSets.debug\nJava sources: [app/src/debug/java]\nManifest file: app/src/debug/AndroidManifest.xml\nAndroid resources: [app/src/debug/res]\nAssets: [app/src/debug/assets]\nAIDL sources: [app/src/debug/aidl]\nRenderScript sources: [app/src/debug/rs]\nJNI sources: [app/src/debug/jni]\nJNI libraries: [app/src/debug/jniLibs]\nJava-style resources: [app/src/debug/resources]\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br")])]),s("p",[e._v("要为您的构建配置生成和查看此报告，请继续如下操作：")]),e._v(" "),s("ol",[s("li",[e._v("点击 IDE 窗口右侧的 "),s("strong",[e._v("Gradle")]),e._v(" "),s("img",{attrs:{src:"https://developer.android.google.cn/images/tools/as-gradle.png",alt:"img"}}),e._v(" 。")]),e._v(" "),s("li",[e._v("导航至 "),s("strong",[e._v("MyApplication > Tasks > android")]),e._v(" 并双击 "),s("strong",[e._v("sourceSets")]),e._v("。")]),e._v(" "),s("li",[e._v("要查看报告，请点击 IDE 窗口底部的 "),s("strong",[e._v("Gradle Console")]),e._v(" "),s("img",{attrs:{src:"https://developer.android.google.cn/images/tools/as-gradlebutton.png",alt:"img"}}),e._v(" 。")])]),e._v(" "),s("p",[s("strong",[e._v("注")]),e._v("：此报告还向您展示了如何为您希望用来运行应用测试的文件组织源集，例如 "),s("code",[e._v("test/")]),e._v(" 和 "),s("code",[e._v("androidTest/")]),e._v(" "),s("a",{attrs:{href:"https://developer.android.google.cn/studio/test/index.html#sourcesets",target:"_blank",rel:"noopener noreferrer"}},[e._v("测试源集"),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("p",[e._v("当您创建新的构建变体时，Android Studio 不会为您创建源集目录，但会为您提供几个选项，帮助您创建。例如，要为“调试”构建类型只创建 "),s("code",[e._v("java/")]),e._v(" 目录，请执行以下操作：")]),e._v(" "),s("ol",[s("li",[e._v("打开 "),s("strong",[e._v("Project")]),e._v(" 窗格并从窗格顶端的下拉菜单中选择 "),s("strong",[e._v("Project")]),e._v(" 视图。")]),e._v(" "),s("li",[e._v("导航至 "),s("code",[e._v("MyProject/app/src/")]),e._v("。")]),e._v(" "),s("li",[e._v("右键点击 "),s("code",[e._v("src")]),e._v(" 目录并选择 "),s("strong",[e._v("New")]),e._v(" > "),s("strong",[e._v("Folder")]),e._v(" > "),s("strong",[e._v("Java Folder")]),e._v("。")]),e._v(" "),s("li",[e._v("从 "),s("strong",[e._v("Target Source Set")]),e._v(" 旁边的下拉菜单中，选择 "),s("strong",[e._v("debug")]),e._v("。")]),e._v(" "),s("li",[e._v("点击 "),s("strong",[e._v("Finish")]),e._v("。")])]),e._v(" "),s("p",[e._v("Android Studio 将会为您的调试构建类型创建源集目录，然后在该目录内部创建 "),s("code",[e._v("java/")]),e._v(" 目录。或者，在针对特定的构建变体向您的项目中添加新文件时，您也可以让 Android Studio 为您创建目录。例如，要为“调试”构建类型创建 XML 值文件：")]),e._v(" "),s("ol",[s("li",[e._v("在相同的 "),s("strong",[e._v("Project")]),e._v(" 窗格中，右键点击 "),s("code",[e._v("src")]),e._v(" 目录并选择 "),s("strong",[e._v("New")]),e._v(" > "),s("strong",[e._v("XML")]),e._v(" > "),s("strong",[e._v("Values XML File")]),e._v("。")]),e._v(" "),s("li",[e._v("为 XML 文件输入名称或保留默认名称。")]),e._v(" "),s("li",[e._v("从 "),s("strong",[e._v("Target Source Set")]),e._v(" 旁边的下拉菜单中，选择 "),s("strong",[e._v("debug")]),e._v("。")]),e._v(" "),s("li",[e._v("点击 "),s("strong",[e._v("Finish")]),e._v("。")])]),e._v(" "),s("p",[e._v("由于“调试”构建类型被指定为目标源集，Android Studio 会在创建 XML 文件时自动创建必要的目录。最终的目录结构看上去应该类似于图 2。")]),e._v(" "),s("p",[s("strong",[e._v("图 2.")]),e._v(" 调试构建类型的新源集目录。")]),e._v(" "),s("p",[e._v("按照同样的方法，您还可以为产品风味创建源集目录（例如 "),s("code",[e._v("src/demo/")]),e._v("），为构建变体创建源集目录（例如 "),s("code",[e._v("src/demoDebug/")]),e._v("）。此外，您还可以创建针对特定构建变体的测试源集，例如 "),s("code",[e._v("src/androidTestDemoDebug/")]),e._v("。如需了解更多信息，请转至"),s("a",{attrs:{href:"https://developer.android.google.cn/studio/test/index.html#sourcesets",target:"_blank",rel:"noopener noreferrer"}},[e._v("测试源集"),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("h3",{attrs:{id:"更改默认源集配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更改默认源集配置","aria-hidden":"true"}},[e._v("#")]),e._v(" 更改默认源集配置")]),e._v(" "),s("p",[e._v("如果您的源未组织到 Gradle 期望的默认源集文件结构中（如上面的"),s("a",{attrs:{href:"https://developer.android.google.cn/studio/build/build-variants#sourcesets",target:"_blank",rel:"noopener noreferrer"}},[e._v("创建源集"),s("OutboundLink")],1),e._v("部分中所述），您可以使用 "),s("a",{attrs:{href:"http://google.github.io/android-gradle-dsl/current/com.android.build.gradle.api.AndroidSourceSet.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("sourceSets {}")]),s("OutboundLink")],1),e._v("代码块更改 Gradle 希望为源集的每个组件收集文件的位置。您不需要重新定位文件；只需要为 Gradle 提供相对于模块级 "),s("code",[e._v("build.gradle")]),e._v(" 文件的路径，Gradle 应当可以在此路径下为每个源集组件找到文件。要了解您可以配置哪些组件，以及是否可以将其映射到多个文件或目录，请阅读"),s("a",{attrs:{href:"http://google.github.io/android-gradle-dsl/current/com.android.build.gradle.api.AndroidSourceSet.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("适用于 Gradle 的 Android 插件参考"),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("p",[e._v("下面的代码示例可以将 "),s("code",[e._v("app/other/")]),e._v(" 目录中的源映射到 "),s("code",[e._v("main")]),e._v(" 源集的某些组件，并更改 "),s("code",[e._v("androidTest")]),e._v(" 源集的根目录。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("android {\n  ...\n  sourceSets {\n    // Encapsulates configurations for the main source set.\n    main {\n      // Changes the directory for Java sources. The default directory is\n      // 'src/main/java'.\n      java.srcDirs = ['other/java']\n\n      // If you list multiple directories, Gradle uses all of them to collect\n      // sources. Because Gradle gives these directories equal priority, if\n      // you define the same resource in more than one directory, you get an\n      // error when merging resources. The default directory is 'src/main/res'.\n      res.srcDirs = ['other/res1', 'other/res2']\n\n      // Note: You should avoid specifying a directory which is a parent to one\n      // or more other directories you specify. For example, avoid the following:\n      // res.srcDirs = ['other/res1', 'other/res1/layouts', 'other/res1/strings']\n      // You should specify either only the root 'other/res1' directory, or only the\n      // nested 'other/res1/layouts' and 'other/res1/strings' directories.\n\n      // For each source set, you can specify only one Android manifest.\n      // By default, Android Studio creates a manifest for your main source\n      // set in the src/main/ directory.\n      manifest.srcFile 'other/AndroidManifest.xml'\n      ...\n    }\n\n    // Create additional blocks to configure other source sets.\n    androidTest {\n\n      // If all the files for a source set are located under a single root\n      // directory, you can specify that directory using the setRoot property.\n      // When gathering sources for the source set, Gradle looks only in locations\n      // relative to the root directory you specify. For example, after applying the\n      // configuration below for the androidTest source set, Gradle looks for Java\n      // sources only in the src/tests/java/ directory.\n      setRoot 'src/tests'\n      ...\n    }\n  }\n}\n...\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br")])]),s("h3",{attrs:{id:"使用源集构建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用源集构建","aria-hidden":"true"}},[e._v("#")]),e._v(" 使用源集构建")]),e._v(" "),s("p",[e._v("您可以使用源集目录包含您希望仅针对某些配置打包的代码和资源。例如，如果您要构建“演示调试”构建变体（它是“演示”产品风味和“调试”构建类型的合体），Gradle 会查看这些目录并赋予以下优先级顺序：")]),e._v(" "),s("ol",[s("li",[s("code",[e._v("src/demoDebug/")]),s("em",[e._v("（构建变体源集）")])]),e._v(" "),s("li",[s("code",[e._v("src/debug/")]),s("em",[e._v("（构建类型源集）")])]),e._v(" "),s("li",[s("code",[e._v("src/demo/")]),s("em",[e._v("（产品风味源集）")])]),e._v(" "),s("li",[s("code",[e._v("src/main/")]),s("em",[e._v("（主源集）")])])]),e._v(" "),s("p",[s("strong",[e._v("注")]),e._v("：如果您"),s("a",{attrs:{href:"https://developer.android.google.cn/studio/build/build-variants#flavor-dimensions",target:"_blank",rel:"noopener noreferrer"}},[e._v("组合多个产品风味"),s("OutboundLink")],1),e._v("，产品风味之间的优先级将由它们所属的风味维度决定。在列示具有 "),s("a",{attrs:{href:"http://google.github.io/android-gradle-dsl/current/com.android.build.gradle.AppExtension.html#com.android.build.gradle.AppExtension:flavorDimensions(java.lang.String%5B%5D)",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("android.flavorDimensions")]),s("OutboundLink")],1),e._v(" 属性的风味维度时，所列示的第一个风味维度中的产品风味比第二个维度中的产品风味拥有更高的优先级，以此类推。此外，与属于各个产品风味的源集相比，您为产品风味组合创建的源集拥有更高的优先级。")]),e._v(" "),s("p",[e._v("上面列出的顺序决定了在 Gradle 合并代码和资源时哪个源集具有较高的优先级。由于 "),s("code",[e._v("demoDebug/")]),e._v(" 源集目录很可能包含特定于该构建变体的文件，如果 "),s("code",[e._v("demoDebug/")]),e._v(" 包含在 "),s("code",[e._v("debug/")]),e._v(" 中也有定义的文件，Gradle 将使用 "),s("code",[e._v("demoDebug/")]),e._v(" 源集中的文件。同样，Gradle 会为构建类型和产品风味源集中的文件赋予比 "),s("code",[e._v("main/")]),e._v(" 中相同文件更高的优先级。Gradle 在应用以下构建规则时会考虑此优先级顺序：")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("一起编译")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("java/\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("目录中的所有源代码以生成单一的输出。")]),e._v(" "),s("p",[s("strong",[e._v("注")]),e._v("：对于给定的构建变体，如果找到两个或两个以上定义同一 Java 类的源集目录，Gradle 就会引发一个构建错误。例如，在构建调试 APK 时，您不能同时定义 "),s("code",[e._v("src/debug/Utility.java")]),e._v(" 和 "),s("code",[e._v("src/main/Utility.java")]),e._v("。这是因为 Gradle 会在构建过程中检查这两个目录并引发“duplicate class”错误。如果针对不同的构建类型需要不同版本的 "),s("code",[e._v("Utility.java")]),e._v("，您可以让每个构建类型定义其自己的文件版本，而不将其包含在 "),s("code",[e._v("main/")]),e._v(" 源集中。")])]),e._v(" "),s("li",[s("p",[e._v("所有清单合并为单个清单。将按照上述列表中的相同顺序指定优先级。也就是说，某个构建类型的清单设置会替换某个产品风味的清单设置，依此类推。如需了解更多信息，请阅读"),s("a",{attrs:{href:"https://developer.android.google.cn/studio/build/manifest-merge.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("合并清单"),s("OutboundLink")],1),e._v("。")])]),e._v(" "),s("li",[s("p",[e._v("同样，"),s("code",[e._v("values/")]),e._v(" 目录中的文件也会合并在一起。如果两个文件同名，例如存在两个 "),s("code",[e._v("strings.xml")]),e._v(" 文件，将按照上述列表中的相同顺序指定优先级。也就是说，在构建类型源集中的文件中定义的值将会替换产品风味中同一文件中定义的值，依此类推。")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("res/")]),e._v(" 和 "),s("code",[e._v("asset/")]),e._v(" 目录中的资源将打包到一起。如果两个或两个以上的源集中定义有同名资源，将按照上述列表中的相同顺序指定优先级。")])]),e._v(" "),s("li",[s("p",[e._v("最后，在构建 APK 时，Gradle 会为随库模块依赖项包含的资源和清单分配最低的优先级。")])])]),e._v(" "),s("h2",{attrs:{id:"声明依赖项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明依赖项","aria-hidden":"true"}},[e._v("#")]),e._v(" 声明依赖项")]),e._v(" "),s("p",[e._v("下面的示例可以在 "),s("code",[e._v("app/")]),e._v(" 模块的 "),s("code",[e._v("build.gradle")]),e._v(" 文件中声明三种不同类型的直接依赖项：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("android {...}\n...\ndependencies {\n    // The 'compile' configuration tells Gradle to add the dependency to the\n    // compilation classpath and include it in the final package.\n\n    // Dependency on the \"mylibrary\" module from this project\n    compile project(\":mylibrary\")\n\n    // Remote binary dependency\n    compile 'com.android.support:appcompat-v7:28.0.0'\n\n    // Local binary dependency\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br")])]),s("p",[e._v("下面逐一介绍了每种直接依赖项。")]),e._v(" "),s("ul",[s("li",[s("p",[s("strong",[e._v("模块依赖项")])]),e._v(" "),s("p",[s("code",[e._v("compile project(':mylibrary')")]),e._v(" 行声明了一个名为“mylibrary”的"),s("a",{attrs:{href:"https://developer.android.google.cn/studio/projects/android-library.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("本地 Android 库模块"),s("OutboundLink")],1),e._v("作为依赖项，并要求构建系统在构建应用时编译并包含该本地模块。")])]),e._v(" "),s("li",[s("p",[s("strong",[e._v("远程二进制依赖项")])]),e._v(" "),s("p",[s("code",[e._v("compile 'com.android.support:appcompat-v7:28.0.0'")]),e._v(" 行会通过指定其 JCenter 坐标，针对 "),s("a",{attrs:{href:"https://developer.android.google.cn/topic/libraries/support-library/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Android 支持库"),s("OutboundLink")],1),e._v("的 28.0.0 版本声明一个依赖项。默认情况下，Android Studio 会将项目配置为使用顶级构建文件中的 JCenter 存储区。当您将项目与构建配置文件同步时，Gradle 会自动从 JCenter 中抽取依赖项。或者，您也可以通过"),s("a",{attrs:{href:"https://developer.android.google.cn/studio/intro/update.html#sdk-manager",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用 SDK 管理器"),s("OutboundLink")],1),e._v("下载和安装特定的依赖项。")])]),e._v(" "),s("li",[s("p",[s("strong",[e._v("本地二进制依赖项")])]),e._v(" "),s("p",[s("code",[e._v("compile fileTree(dir: 'libs', include: ['*.jar'])")]),e._v(" 行告诉构建系统在编译类路径和最终的应用软件包中包含 "),s("code",[e._v("app/libs/")]),e._v(" 目录内的任何 JAR 文件。如果您有模块需要本地二进制依赖项，请将这些依赖项的 JAR 文件复制到项目内部的 "),s("code",[e._v("<moduleName>/libs")]),e._v(" 中。")])])]),e._v(" "),s("p",[e._v("该模块的某些直接依赖项可能会有其自己的依赖项，这称为该模块的"),s("em",[e._v("传递依赖项")]),e._v("。Gradle 将会自动为您收集并添加这些传递依赖项，而不必手动逐一加以声明。适用于 Gradle 的 Android 插件提供了一项有用的 Gradle 任务，可为每个构建变体和"),s("a",{attrs:{href:"https://developer.android.google.cn/studio/test/index.html#sourcesets",target:"_blank",rel:"noopener noreferrer"}},[e._v("测试源集"),s("OutboundLink")],1),e._v("生成依赖项树，因此，您可以轻松地可视化模块的直接和传递依赖项。要生成此报告，请继续如下操作：")]),e._v(" "),s("ol",[s("li",[e._v("点击 IDE 窗口右侧的 "),s("strong",[e._v("Gradle")]),e._v(" "),s("img",{attrs:{src:"https://developer.android.google.cn/images/tools/as-gradle.png",alt:"img"}}),e._v(" 。")]),e._v(" "),s("li",[e._v("导航至 "),s("strong",[e._v("MyApplication > Tasks > android")]),e._v(" 并双击 "),s("strong",[e._v("androidDependencies")]),e._v("。")]),e._v(" "),s("li",[e._v("要查看报告，请点击 IDE 窗口底部的 "),s("strong",[e._v("Gradle Console")]),e._v(" "),s("img",{attrs:{src:"https://developer.android.google.cn/images/tools/as-gradlebutton.png",alt:"img"}}),e._v(" 。")])]),e._v(" "),s("p",[e._v("以下示例报告显示了调试构建变体的依赖项树，并包含前一示例中的本地模块依赖项和远程依赖项。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Executing tasks: [androidDependencies]\n:app:androidDependencies\ndebug\n/**\n * Both the library module dependency and remote binary dependency are listed\n * with their transitive dependencies.\n */\n+--- MyApp:mylibrary:unspecified\n|    \\--- com.android.support:appcompat-v7:28.0.0\n|         +--- com.android.support:animated-vector-drawable:28.0.0\n|         |    \\--- com.android.support:support-vector-drawable:28.0.0\n|         |         \\--- com.android.support:support-v4:28.0.0\n|         |              \\--- LOCAL: internal_impl-28.0.0.jar\n|         +--- com.android.support:support-v4:28.0.0\n|         |    \\--- LOCAL: internal_impl-28.0.0.jar\n|         \\--- com.android.support:support-vector-drawable:28.0.0\n|              \\--- com.android.support:support-v4:28.0.0\n|                   \\--- LOCAL: internal_impl-28.0.0.jar\n\\--- com.android.support:appcompat-v7:28.0.0\n     +--- com.android.support:animated-vector-drawable:28.0.0\n     |    \\--- com.android.support:support-vector-drawable:28.0.0\n     |         \\--- com.android.support:support-v4:28.0.0\n     |              \\--- LOCAL: internal_impl-28.0.0.jar\n     +--- com.android.support:support-v4:28.0.0\n     |    \\--- LOCAL: internal_impl-28.0.0.jar\n     \\--- com.android.support:support-vector-drawable:28.0.0\n          \\--- com.android.support:support-v4:28.0.0\n               \\--- LOCAL: internal_impl-28.0.0.jar\n...\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br")])]),s("p",[e._v("如需了解在 Gradle 中管理依赖项的详细信息，请参阅《Gradle 用户指南》中的"),s("a",{attrs:{href:"http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("依赖项管理基础知识"),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("h3",{attrs:{id:"配置依赖项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置依赖项","aria-hidden":"true"}},[e._v("#")]),e._v(" 配置依赖项")]),e._v(" "),s("p",[e._v("您可以使用特定的配置关键字告诉 Gradle 如何以及何时使用某个依赖项，例如前述示例中的 "),s("code",[e._v("compile")]),e._v(" 关键字。下面介绍了您可以用来配置依赖项的一些关键字：")]),e._v(" "),s("ul",[s("li",[s("p",[s("code",[e._v("compile")])]),e._v(" "),s("p",[e._v("指定编译时依赖项。Gradle 将此配置的依赖项添加到类路径和应用的 APK。这是默认配置。")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("apk")])]),e._v(" "),s("p",[e._v("指定 Gradle 需要将其与应用的 APK 一起打包的仅运行时依赖项。您可以将此配置与 JAR 二进制依赖项一起使用，而不能与其他库模块依赖项或 AAR 二进制依赖项一起使用。")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("provided")])]),e._v(" "),s("p",[e._v("指定 Gradle "),s("em",[e._v("不")]),e._v("与应用的 APK 一起打包的编译时依赖项。如果运行时无需此依赖项，这将有助于缩减 APK 的大小。您可以将此配置与 JAR 二进制依赖项一起使用，而不能与其他库模块依赖项或 AAR 二进制依赖项一起使用。")])])]),e._v(" "),s("p",[e._v("此外，您可以通过将构建变体或测试源集的名称应用于配置关键字，为特定的构建变体或"),s("a",{attrs:{href:"https://developer.android.google.cn/studio/test/index.html#sourcesets",target:"_blank",rel:"noopener noreferrer"}},[e._v("测试源集"),s("OutboundLink")],1),e._v("配置依赖项，如下例所示。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("dependencies {\n    ...\n    // Adds specific library module dependencies as compile time dependencies\n    // to the fullRelease and fullDebug build variants.\n    fullReleaseCompile project(path: ':library', configuration: 'release')\n    fullDebugCompile project(path: ':library', configuration: 'debug')\n\n    // Adds a compile time dependency for local tests.\n    testCompile 'junit:junit:4.12'\n\n    // Adds a compile time dependency for the test APK.\n    androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.2'\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br")])])])},[],!1,null,null,null);n.default=r.exports}}]);