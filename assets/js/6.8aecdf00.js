(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{208:function(e,n,t){"use strict";t.r(n);var r=t(0),a=Object(r.a)({},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[t("a",{attrs:{href:"https://blog.csdn.net/RobotHost/article/details/70098744?tdsourcetag=s_pcqq_aiomsg",target:"_blank",rel:"noopener noreferrer"}},[e._v("GreenDao一对多--"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("一对一 "),t("code",[e._v("@ToOne")]),e._v(" 就是一个主键对应一个值，关于删除数据，并没有关联删除")]),e._v(" "),t("p",[e._v("一对多 "),t("code",[e._v('@ToMany(referencedJoinProperty = "parentId")')]),e._v("类似于约束外键。 比如一个老师有多个学生，要有一个主键，一个外键，根据外键去查看另外一张表，反过来就是多对一")]),e._v(" "),t("p",[e._v("多对多， "),t("code",[e._v('@JoinEntity(entity = TeacherJoinStudentBean.class,sourceProperty = "tId",targetProperty = "sId")')]),e._v(" 比如多个老师有多个学生，这种情况需要另外一张表，用来存放老师和学生的id和自己的主键，直接查看这张表就可以。")]),e._v(" "),t("p",[e._v("实体注解：")]),e._v(" "),t("p",[t("code",[e._v("@Entity")]),e._v(" 用于标识这是一个需要Greendao帮我们生成代码的bean")]),e._v(" "),t("p",[t("code",[e._v("@Id")]),e._v(" 标明主键，可以设置为是否自增，如果原来我的字段里就有id，那么就不需要设置Long类型的Id,将Id改为不可自增就可以")]),e._v(" "),t("p",[t("code",[e._v("@Property")]),e._v(" 用于设置属性在数据库中的列名")]),e._v(" "),t("p",[t("code",[e._v("@Transient")]),e._v("表示这个字段不会再数据库里面插入")]),e._v(" "),t("p",[t("code",[e._v("@Index")]),e._v(" 通过这个字段建立索引")]),e._v(" "),t("p",[t("code",[e._v("@Convert")]),e._v("对不是基本类型进行转换")]),e._v(" "),t("p",[e._v("a")]),e._v(" "),t("p",[e._v("关键的几个类： DaoMaster：用于创建数据库以及获取DaoSession")]),e._v(" "),t("p",[e._v("DaoSession：用于获取各个表对应的Dao类")]),e._v(" "),t("p",[e._v("各个表对应的Dao：提供了对表进行增删改查的方法 对于每一个实体类，greenDao生成一个DAO,持有很多持久性的方法，例如 count， loadAll以及insertInTx。")]),e._v(" "),t("p",[e._v("greendao加密： 加密的方法是用了getEncryptedWritableDb，在得到DB并getSession时需要输入密钥。在取数据时使用的session必须也是使用相同的密钥new出来的，否则只能看到空数据。并且把加密后的本地文件拿出来，也是看不到内容的。")]),e._v(" "),t("p",[e._v("GreenDao升级：greendao不支持数据迁移 第一步：新建一个类，继承"),t("code",[e._v("DaoMaster.DevOpenHelper")]),e._v("，重写"),t("code",[e._v("onUpgrade(Database db, int oldVersion, int newVersion)")]),e._v("方法，在该方法中使用"),t("a",{attrs:{href:"https://github.com/yuweiguocn/GreenDaoUpgradeHelper",target:"_blank",rel:"noopener noreferrer"}},[e._v("MigrationHelper"),t("OutboundLink")],1),e._v("进行数据库升级以及数据迁移。")]),e._v(" "),t("p",[e._v("然后使用MyOpenHelper替代DaoMaster.DevOpenHelper来进行创建数据库等操作")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("mSQLiteOpenHelper = new MyOpenHelper(MyApplication.getInstance(), DB_NAME, null);//建库\nmDaoMaster = new DaoMaster(mSQLiteOpenHelper.getWritableDatabase());\nmDaoSession = mDaoMaster.newSession();\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("第二步：新增或者修改字段，新增的字段都会被赋予空值，将原来的getset方法删除，重新build,最后修改版本号 dos命令")])])},[],!1,null,null,null);n.default=a.exports}}]);